# .env.example - Plantilla de Configuración de Entorno
# MetaShark (I.S.) - Todos los derechos reservados. Florianópolis, Brasil 2025.
# Web: https://www.metashark.tech | Contacto: contato@metashark.tech
#
# Copia este archivo a .env y reemplaza los placeholders con tus valores reales.
# ¡NO SUBAS TU ARCHIVO .env CON SECRETOS A GIT!

# ==============================================================================
# ENTORNO DE APLICACIÓN
# ==============================================================================
NODE_ENV=development
PORT=3000

# ==============================================================================
# BASE DE DATOS (PostgreSQL - Configuración para Desarrollo Local)
# Estas variables deben coincidir con tu docker-compose.yml si usas Docker localmente.
# ==============================================================================
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_USER=your_db_user_dev_example
POSTGRES_PASSWORD=your_db_password_dev_example

# --- Base de Datos Principal de Desarrollo ---
# Usada por `prisma/schema.dev.prisma` y la aplicación en modo desarrollo.
POSTGRES_DB_DEV=dfs_invest_flow_dev_example
DATABASE_URL_DEV="postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB_DEV}?schema=public"

# --- Base de Datos de Pruebas (E2E / Integración) ---
# Usada por los scripts de test para crear y destruir una BD aislada.
POSTGRES_DB_TEST=dfs_invest_flow_test_example
DATABASE_URL_TEST="postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB_TEST}?schema=public"

# --- Base de Datos de Producción (o Staging) ---
# Usada por `prisma/schema.prisma`.
# Para desarrollo local, puedes comentar esta sección o apuntarla a una BD de desarrollo.
# En entornos de producción/staging reales, estas variables se configuran en el servidor.
POSTGRES_DB_PROD=dfs_invest_flow_prod_example
DATABASE_URL="postgresql://YOUR_PROD_DB_USER:YOUR_PROD_DB_PASSWORD@YOUR_PROD_DB_HOST:YOUR_PROD_DB_PORT/${POSTGRES_DB_PROD}?schema=public"

# ==============================================================================
# REDIS (Local Docker)
# ==============================================================================
REDIS_HOST=localhost
REDIS_PORT=6969 # Puerto expuesto en docker-compose.yml
# REDIS_PASSWORD= # Descomentar y establecer si tu Redis tiene contraseña
REDIS_URL="redis://${REDIS_HOST}:${REDIS_PORT}"
# Si Redis tiene contraseña: REDIS_URL="redis://:YOUR_REDIS_PASSWORD@${REDIS_HOST}:${REDIS_PORT}"

# ==============================================================================
# API WHATSAPP (Placeholders - ¡REEMPLAZAR CON VALORES REALES DE META DEVELOPER PORTAL!)
# ==============================================================================
WHATSAPP_APP_SECRET=YOUR_WHATSAPP_APP_SECRET_HERE
WHATSAPP_ACCESS_TOKEN=YOUR_WHATSAPP_PERMANENT_ACCESS_TOKEN_HERE
WHATSAPP_PHONE_NUMBER_ID=YOUR_WHATSAPP_PHONE_NUMBER_ID_HERE
WHATSAPP_WEBHOOK_VERIFY_TOKEN=A_STRONG_AND_UNIQUE_WEBHOOK_VERIFY_TOKEN

# ==============================================================================
# API GOOGLE AI / GEMINI (Placeholder - ¡REEMPLAZAR CON TU API KEY REAL!)
# ==============================================================================
GOOGLE_AI_API_KEY=YOUR_GOOGLE_AI_API_KEY_HERE

# ==============================================================================
# JWT Y SEGURIDAD (Placeholders - ¡REEMPLAZAR CON VALORES REALES Y SEGUROS GENERADOS ALEATORIAMENTE!)
# ==============================================================================
JWT_SECRET=generate_a_very_strong_random_string_for_jwt_secret_please
JWT_EXPIRATION=1d # Ejemplo: 1 día. Usar '1h', '7d', etc.
COOKIE_SECRET=generate_another_very_strong_random_string_for_cookie_secret_please

# ==============================================================================
# CONFIGURACIÓN CORS (Cross-Origin Resource Sharing)
# ==============================================================================
# Lista de orígenes permitidos separados por coma.
# Para desarrollo, localhost:4200 es común para frontends Angular/React/Vue.
# Para producción, especifica el dominio de tu frontend.
CORS_ALLOWED_ORIGINS=http://localhost:4200,http://localhost:3001 # Puerto de DevHub si es diferente

# ==============================================================================
# CONFIGURACIÓN DE LOGGING (Opcional, la aplicación usará defaults si no se especifican)
# ==============================================================================
# Niveles posibles: 'log', 'error', 'warn', 'debug', 'verbose' (separados por coma)
# LOG_LEVELS=log,error,warn,debug,verbose

# ==============================================================================
# CONFIGURACIÓN DE RATE LIMITER (Anti-Ban, la aplicación usará defaults si no se especifican)
# ==============================================================================
# RATE_LIMITER_DEFAULT_POINTS=10
# RATE_LIMITER_DEFAULT_DURATION=1 # en segundos
# RATE_LIMITER_STORE=redis # o 'memory'

# ==============================================================================
# CONFIGURACIÓN DE HEALTH SCORE (Anti-Ban, la aplicación usará defaults si no se especifican)
# ==============================================================================
# DEFAULT_HEALTH_SCORE=100

{
  "graph": {
    "nodes": {
      "core-domain-shared-kernel-commands-queries": {
        "name": "core-domain-shared-kernel-commands-queries",
        "type": "lib",
        "data": {
          "root": "libs/core/domain/shared-kernel/commands-queries",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/core/domain/shared-kernel/commands-queries",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/core/domain/shared-kernel/commands-queries/jest.config.ts",
                "passWithNoTests": false
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "core-domain-shared-kernel-commands-queries",
          "$schema": "../../../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/core/domain/shared-kernel/commands-queries/src",
          "projectType": "library",
          "tags": [
            "scope:core-domain",
            "type:shared-kernel",
            "layer:domain"
          ],
          "implicitDependencies": []
        }
      },
      "core-domain-shared-kernel-value-objects": {
        "name": "core-domain-shared-kernel-value-objects",
        "type": "lib",
        "data": {
          "root": "libs/core/domain/shared-kernel/value-objects",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/core/domain/shared-kernel/value-objects",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/core/domain/shared-kernel/value-objects/jest.config.ts",
                "passWithNoTests": false
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "core-domain-shared-kernel-value-objects",
          "$schema": "../../../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/core/domain/shared-kernel/value-objects/src",
          "projectType": "library",
          "tags": [
            "scope:core-domain",
            "type:shared-kernel",
            "layer:domain"
          ],
          "implicitDependencies": []
        }
      },
      "core-domain-shared-kernel-entities": {
        "name": "core-domain-shared-kernel-entities",
        "type": "lib",
        "data": {
          "root": "libs/core/domain/shared-kernel/entities",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/core/domain/shared-kernel/entities",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/core/domain/shared-kernel/entities/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "core-domain-shared-kernel-entities",
          "$schema": "../../../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/core/domain/shared-kernel/entities/src",
          "projectType": "library",
          "tags": [
            "scope:core-domain",
            "type:shared-kernel",
            "layer:domain"
          ],
          "implicitDependencies": []
        }
      },
      "core-domain-shared-kernel-mappers": {
        "name": "core-domain-shared-kernel-mappers",
        "type": "lib",
        "data": {
          "root": "libs/core/domain/shared-kernel/mappers",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/core/domain/shared-kernel/mappers",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/core/domain/shared-kernel/mappers/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "core-domain-shared-kernel-mappers",
          "$schema": "../../../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/core/domain/shared-kernel/mappers/src",
          "projectType": "library",
          "tags": [
            "scope:core-domain",
            "type:shared-kernel",
            "layer:domain"
          ],
          "implicitDependencies": []
        }
      },
      "core-domain-shared-kernel-events": {
        "name": "core-domain-shared-kernel-events",
        "type": "lib",
        "data": {
          "root": "libs/core/domain/shared-kernel/events",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/core/domain/shared-kernel/events",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/core/domain/shared-kernel/events/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "core-domain-shared-kernel-events",
          "$schema": "../../../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/core/domain/shared-kernel/events/src",
          "projectType": "library",
          "tags": [
            "scope:core-domain",
            "type:shared-kernel",
            "layer:domain"
          ],
          "implicitDependencies": []
        }
      },
      "core-domain-shared-kernel-ports": {
        "name": "core-domain-shared-kernel-ports",
        "type": "lib",
        "data": {
          "root": "libs/core/domain/shared-kernel/ports",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/core/domain/shared-kernel/ports",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/core/domain/shared-kernel/ports/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "core-domain-shared-kernel-ports",
          "$schema": "../../../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/core/domain/shared-kernel/ports/src",
          "projectType": "library",
          "tags": [
            "scope:core-domain",
            "type:shared-kernel",
            "layer:domain"
          ],
          "implicitDependencies": []
        }
      },
      "shared-validation-schemas": {
        "name": "shared-validation-schemas",
        "type": "lib",
        "data": {
          "root": "libs/shared/validation-schemas",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/shared/validation-schemas",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/shared/validation-schemas/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "shared-validation-schemas",
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/shared/validation-schemas/src",
          "projectType": "library",
          "tags": [
            "scope:shared",
            "type:validation",
            "layer:shared"
          ],
          "implicitDependencies": []
        }
      },
      "core-application-tenancy": {
        "name": "core-application-tenancy",
        "type": "lib",
        "data": {
          "root": "libs/core/application/tenancy",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/core/application/tenancy",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/core/application/tenancy/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "core-application-tenancy",
          "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/core/application/tenancy/src",
          "projectType": "library",
          "tags": [
            "scope:core-application",
            "type:application-logic",
            "layer:application",
            "feature:tenancy"
          ],
          "implicitDependencies": []
        }
      },
      "core-domain-tenancy": {
        "name": "core-domain-tenancy",
        "type": "lib",
        "data": {
          "root": "libs/core/domain/tenancy",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/core/domain/tenancy",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/core/domain/tenancy/jest.config.ts"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "core-domain-tenancy",
          "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/core/domain/tenancy/src",
          "projectType": "library",
          "tags": [
            "scope:core-domain",
            "type:domain-logic",
            "layer:domain",
            "domain:tenancy"
          ],
          "implicitDependencies": []
        }
      },
      "aiper-assistance": {
        "name": "aiper-assistance",
        "type": "app",
        "data": {
          "root": "apps/aiper-assistance",
          "targets": {
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "apps/aiper-assistance/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/next:build",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "outputPath": "dist/apps/aiper-assistance"
              },
              "configurations": {
                "development": {},
                "production": {}
              },
              "parallelism": true
            },
            "dev": {
              "continuous": true,
              "options": {
                "cwd": "apps/aiper-assistance",
                "command": "next dev"
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "continuous": true,
              "options": {
                "cwd": "apps/aiper-assistance",
                "command": "next start"
              },
              "dependsOn": [
                "build"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "options": {
                "cwd": "apps/aiper-assistance",
                "command": "next start"
              },
              "dependsOn": [
                "build"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects aiper-assistance --includeDependentProjects -- pnpm exec nx build-deps aiper-assistance"
              },
              "configurations": {},
              "parallelism": true
            },
            "serve": {
              "executor": "@nx/next:server",
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "aiper-assistance:build",
                "dev": true
              },
              "configurations": {
                "development": {
                  "buildTarget": "aiper-assistance:build:development",
                  "dev": true
                },
                "production": {
                  "buildTarget": "aiper-assistance:build:production",
                  "dev": false
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "name": "aiper-assistance",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/aiper-assistance/src",
          "projectType": "application",
          "tags": [
            "scope:app",
            "type:pwa",
            "layer:presentation",
            "app:aiper-assistance"
          ],
          "implicitDependencies": []
        }
      },
      "shared-constants": {
        "name": "shared-constants",
        "type": "lib",
        "data": {
          "root": "libs/shared/constants",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/shared/constants",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/shared/constants/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "shared-constants",
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/shared/constants/src",
          "projectType": "library",
          "tags": [
            "scope:shared",
            "type:constants",
            "layer:shared"
          ],
          "implicitDependencies": []
        }
      },
      "guia-investidor": {
        "name": "guia-investidor",
        "type": "app",
        "data": {
          "root": "apps/guia-investidor",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/guia-investidor",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "apps/guia-investidor",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}\\coverage\\apps\\guia-investidor"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "options": {
                "cwd": "apps/guia-investidor",
                "tty": false,
                "command": "next build"
              },
              "dependsOn": [
                "^build"
              ],
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "next"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}/apps/guia-investidor/.next",
                "{workspaceRoot}/apps/guia-investidor/.next/!(cache)"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "continuous": true,
              "options": {
                "cwd": "apps/guia-investidor",
                "command": "next dev"
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "continuous": true,
              "options": {
                "cwd": "apps/guia-investidor",
                "command": "next start"
              },
              "dependsOn": [
                "build"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "options": {
                "cwd": "apps/guia-investidor",
                "command": "next start"
              },
              "dependsOn": [
                "build"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects guia-investidor --includeDependentProjects -- pnpm exec nx build-deps guia-investidor"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "guia-investidor",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/guia-investidor",
          "projectType": "application",
          "tags": [
            "scope:app",
            "type:portal",
            "layer:presentation",
            "app:guia-investidor"
          ],
          "implicitDependencies": []
        }
      },
      "portal-imoveis": {
        "name": "portal-imoveis",
        "type": "app",
        "data": {
          "root": "apps/portal-imoveis",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/portal-imoveis",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "apps/portal-imoveis",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}\\coverage\\apps\\portal-imoveis"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "options": {
                "cwd": "apps/portal-imoveis",
                "tty": false,
                "command": "next build"
              },
              "dependsOn": [
                "^build"
              ],
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "next"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}/apps/portal-imoveis/.next",
                "{workspaceRoot}/apps/portal-imoveis/.next/!(cache)"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "continuous": true,
              "options": {
                "cwd": "apps/portal-imoveis",
                "command": "next dev"
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "continuous": true,
              "options": {
                "cwd": "apps/portal-imoveis",
                "command": "next start"
              },
              "dependsOn": [
                "build"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "options": {
                "cwd": "apps/portal-imoveis",
                "command": "next start"
              },
              "dependsOn": [
                "build"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects portal-imoveis --includeDependentProjects -- pnpm exec nx build-deps portal-imoveis"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "portal-imoveis",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/portal-imoveis",
          "projectType": "application",
          "tags": [
            "scope:app",
            "type:pwa",
            "layer:presentation",
            "app:portal-imoveis"
          ],
          "implicitDependencies": []
        }
      },
      "pwa-consultant": {
        "name": "pwa-consultant",
        "type": "app",
        "data": {
          "root": "apps/pwa-consultant",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/pwa-consultant",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "apps/pwa-consultant",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}\\coverage\\apps\\pwa-consultant"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "options": {
                "cwd": "apps/pwa-consultant",
                "tty": false,
                "command": "next build"
              },
              "dependsOn": [
                "^build"
              ],
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "next"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}/apps/pwa-consultant/.next",
                "{workspaceRoot}/apps/pwa-consultant/.next/!(cache)"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "continuous": true,
              "options": {
                "cwd": "apps/pwa-consultant",
                "command": "next dev"
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "continuous": true,
              "options": {
                "cwd": "apps/pwa-consultant",
                "command": "next start"
              },
              "dependsOn": [
                "build"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "options": {
                "cwd": "apps/pwa-consultant",
                "command": "next start"
              },
              "dependsOn": [
                "build"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects pwa-consultant --includeDependentProjects -- pnpm exec nx build-deps pwa-consultant"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "pwa-consultant",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/pwa-consultant",
          "projectType": "application",
          "tags": [
            "scope:app",
            "type:pwa",
            "layer:presentation",
            "app:pwa-consultant"
          ],
          "implicitDependencies": []
        }
      },
      "pwa-supervisor": {
        "name": "pwa-supervisor",
        "type": "app",
        "data": {
          "root": "apps/pwa-supervisor",
          "targets": {
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "apps/pwa-supervisor/jest.config.ts",
                "passWithNoTests": false
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/next:build",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "outputPath": "dist/apps/pwa-supervisor"
              },
              "configurations": {
                "development": {
                  "outputPath": "apps/pwa-supervisor"
                },
                "production": {}
              },
              "parallelism": true
            },
            "dev": {
              "continuous": true,
              "options": {
                "cwd": "apps/pwa-supervisor",
                "command": "next dev"
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "continuous": true,
              "options": {
                "cwd": "apps/pwa-supervisor",
                "command": "next start"
              },
              "dependsOn": [
                "build"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "options": {
                "cwd": "apps/pwa-supervisor",
                "command": "next start"
              },
              "dependsOn": [
                "build"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects pwa-supervisor --includeDependentProjects -- pnpm exec nx build-deps pwa-supervisor"
              },
              "configurations": {},
              "parallelism": true
            },
            "serve": {
              "executor": "@nx/next:server",
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "pwa-supervisor:build",
                "dev": true
              },
              "configurations": {
                "development": {
                  "buildTarget": "pwa-supervisor:build:development",
                  "dev": true
                },
                "production": {
                  "buildTarget": "pwa-supervisor:build:production",
                  "dev": false
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "export": {
              "executor": "@nx/next:export",
              "options": {
                "buildTarget": "pwa-supervisor:build:production"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "pwa-supervisor",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/pwa-supervisor",
          "projectType": "application",
          "tags": [
            "scope:app",
            "type:pwa",
            "layer:presentation",
            "app:pwa-supervisor"
          ],
          "implicitDependencies": []
        }
      },
      "shared-errors": {
        "name": "shared-errors",
        "type": "lib",
        "data": {
          "root": "libs/shared/errors",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/shared/errors",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/shared/errors/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "shared-errors",
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/shared/errors/src",
          "projectType": "library",
          "tags": [
            "scope:shared",
            "type:errors",
            "layer:shared"
          ],
          "implicitDependencies": []
        }
      },
      "shared-result": {
        "name": "shared-result",
        "type": "lib",
        "data": {
          "root": "libs/shared/result",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/shared/result",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/shared/result/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "shared-result",
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/shared/result/src",
          "projectType": "library",
          "tags": [
            "scope:shared",
            "type:functional",
            "layer:shared"
          ],
          "implicitDependencies": []
        }
      },
      "api-main-e2e": {
        "name": "api-main-e2e",
        "type": "e2e",
        "data": {
          "root": "apps/api-main-e2e",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/api-main-e2e",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "e2e": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{e2eProjectRoot}"
              ],
              "options": {
                "jestConfig": "apps/api-main-e2e/jest.config.ts",
                "passWithNoTests": true
              },
              "dependsOn": [
                "api-main:build",
                "api-main:serve"
              ],
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "api-main-e2e",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "projectType": "application",
          "implicitDependencies": [
            "api-main"
          ],
          "tags": []
        }
      },
      "shared-types": {
        "name": "shared-types",
        "type": "lib",
        "data": {
          "root": "libs/shared/types",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/shared/types",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/shared/types/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "shared-types",
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/shared/types/src",
          "projectType": "library",
          "tags": [
            "scope:shared",
            "type:types",
            "layer:shared"
          ],
          "implicitDependencies": []
        }
      },
      "shared-utils": {
        "name": "shared-utils",
        "type": "lib",
        "data": {
          "root": "libs/shared/utils",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/shared/utils",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/shared/utils/jest.config.ts",
                "passWithNoTests": false
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "shared-utils",
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/shared/utils/src",
          "projectType": "library",
          "tags": [
            "scope:shared",
            "type:utils",
            "layer:shared"
          ],
          "implicitDependencies": []
        }
      },
      "web3-portal": {
        "name": "web3-portal",
        "type": "app",
        "data": {
          "root": "apps/web3-portal",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/web3-portal",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "apps/web3-portal",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}\\coverage\\apps\\web3-portal"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "options": {
                "cwd": "apps/web3-portal",
                "tty": false,
                "command": "next build"
              },
              "dependsOn": [
                "^build"
              ],
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "next"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}/apps/web3-portal/.next",
                "{workspaceRoot}/apps/web3-portal/.next/!(cache)"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "continuous": true,
              "options": {
                "cwd": "apps/web3-portal",
                "command": "next dev"
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "continuous": true,
              "options": {
                "cwd": "apps/web3-portal",
                "command": "next start"
              },
              "dependsOn": [
                "build"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "options": {
                "cwd": "apps/web3-portal",
                "command": "next start"
              },
              "dependsOn": [
                "build"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects web3-portal --includeDependentProjects -- pnpm exec nx build-deps web3-portal"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "web3-portal",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/web3-portal",
          "projectType": "application",
          "tags": [
            "scope:app",
            "type:pwa",
            "layer:presentation",
            "feature:web3"
          ],
          "implicitDependencies": []
        }
      },
      "ui-shared": {
        "name": "ui-shared",
        "type": "lib",
        "data": {
          "root": "libs/ui-shared",
          "targets": {
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/ui-shared/jest.config.ts",
                "passWithNoTests": false
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "ui-shared",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/ui-shared/src",
          "projectType": "library",
          "tags": [
            "scope:shared",
            "type:ui",
            "layer:shared"
          ],
          "implicitDependencies": []
        }
      },
      "api-main": {
        "name": "api-main",
        "type": "app",
        "data": {
          "root": "apps/api-main",
          "projectType": "application",
          "metadata": {},
          "targets": {
            "build": {
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "webpack-cli"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}/dist\\apps\\api-main"
              ],
              "metadata": {
                "technologies": [
                  "webpack"
                ],
                "description": "Runs Webpack build",
                "help": {
                  "command": "pnpm exec webpack-cli build --help",
                  "example": {
                    "options": {
                      "json": "stats.json"
                    },
                    "args": [
                      "--profile"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "options": {
                "cwd": "apps/api-main",
                "args": [
                  "node-env=production"
                ],
                "command": "webpack-cli build"
              },
              "configurations": {
                "development": {
                  "args": [
                    "node-env=development"
                  ]
                }
              },
              "parallelism": true
            },
            "serve": {
              "continuous": true,
              "executor": "@nx/js:node",
              "defaultConfiguration": "development",
              "dependsOn": [
                "build"
              ],
              "options": {
                "buildTarget": "api-main:build",
                "runBuildTargetDependencies": false
              },
              "configurations": {
                "development": {
                  "buildTarget": "api-main:build:development"
                },
                "production": {
                  "buildTarget": "api-main:build:production"
                }
              },
              "parallelism": true
            },
            "preview": {
              "continuous": true,
              "options": {
                "cwd": "apps/api-main",
                "args": [
                  "--node-env=production"
                ],
                "command": "webpack-cli serve"
              },
              "metadata": {
                "technologies": [
                  "webpack"
                ],
                "description": "Starts Webpack dev server in production mode",
                "help": {
                  "command": "pnpm exec webpack-cli serve --help",
                  "example": {
                    "options": {
                      "args": [
                        "--client-progress",
                        "--history-api-fallback "
                      ]
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "dependsOn": [
                "build"
              ],
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build",
                "spa": true
              },
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects api-main --includeDependentProjects -- pnpm exec nx build-deps api-main"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/api-main",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}\\coverage\\apps\\api-main"
              ],
              "executor": "nx:run-commands",
              "options": {
                "cwd": "apps/api-main",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "api-main",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/api-main/src",
          "tags": [
            "scope:app"
          ],
          "implicitDependencies": []
        }
      },
      "dev-hub": {
        "name": "dev-hub",
        "type": "app",
        "data": {
          "root": "apps/dev-hub",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/dev-hub",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "apps/dev-hub",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}\\coverage\\apps\\dev-hub"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "options": {
                "cwd": "apps/dev-hub",
                "tty": false,
                "command": "next build"
              },
              "dependsOn": [
                "^build"
              ],
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "next"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}/apps/dev-hub/.next",
                "{workspaceRoot}/apps/dev-hub/.next/!(cache)"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "continuous": true,
              "options": {
                "cwd": "apps/dev-hub",
                "command": "next dev"
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "continuous": true,
              "options": {
                "cwd": "apps/dev-hub",
                "command": "next start"
              },
              "dependsOn": [
                "build"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "options": {
                "cwd": "apps/dev-hub",
                "command": "next start"
              },
              "dependsOn": [
                "build"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects dev-hub --includeDependentProjects -- pnpm exec nx build-deps dev-hub"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "dev-hub",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/dev-hub",
          "projectType": "application",
          "tags": [
            "scope:app",
            "type:tooling",
            "layer:presentation",
            "app:dev-hub"
          ],
          "implicitDependencies": []
        }
      }
    },
    "dependencies": {
      "core-domain-shared-kernel-commands-queries": [
        {
          "source": "core-domain-shared-kernel-commands-queries",
          "target": "shared-result",
          "type": "static"
        },
        {
          "source": "core-domain-shared-kernel-commands-queries",
          "target": "shared-errors",
          "type": "static"
        },
        {
          "source": "core-domain-shared-kernel-commands-queries",
          "target": "shared-types",
          "type": "static"
        },
        {
          "source": "core-domain-shared-kernel-commands-queries",
          "target": "shared-utils",
          "type": "static"
        },
        {
          "source": "core-domain-shared-kernel-commands-queries",
          "target": "shared-constants",
          "type": "static"
        }
      ],
      "core-domain-shared-kernel-value-objects": [
        {
          "source": "core-domain-shared-kernel-value-objects",
          "target": "shared-errors",
          "type": "static"
        },
        {
          "source": "core-domain-shared-kernel-value-objects",
          "target": "shared-types",
          "type": "static"
        },
        {
          "source": "core-domain-shared-kernel-value-objects",
          "target": "shared-utils",
          "type": "static"
        }
      ],
      "core-domain-shared-kernel-entities": [
        {
          "source": "core-domain-shared-kernel-entities",
          "target": "core-domain-shared-kernel-events",
          "type": "static"
        },
        {
          "source": "core-domain-shared-kernel-entities",
          "target": "shared-errors",
          "type": "static"
        },
        {
          "source": "core-domain-shared-kernel-entities",
          "target": "shared-types",
          "type": "static"
        },
        {
          "source": "core-domain-shared-kernel-entities",
          "target": "shared-utils",
          "type": "static"
        }
      ],
      "core-domain-shared-kernel-mappers": [
        {
          "source": "core-domain-shared-kernel-mappers",
          "target": "core-domain-shared-kernel-entities",
          "type": "static"
        }
      ],
      "core-domain-shared-kernel-events": [
        {
          "source": "core-domain-shared-kernel-events",
          "target": "shared-errors",
          "type": "static"
        },
        {
          "source": "core-domain-shared-kernel-events",
          "target": "shared-types",
          "type": "static"
        },
        {
          "source": "core-domain-shared-kernel-events",
          "target": "shared-utils",
          "type": "static"
        }
      ],
      "core-domain-shared-kernel-ports": [
        {
          "source": "core-domain-shared-kernel-ports",
          "target": "shared-types",
          "type": "static"
        },
        {
          "source": "core-domain-shared-kernel-ports",
          "target": "core-domain-shared-kernel-entities",
          "type": "static"
        },
        {
          "source": "core-domain-shared-kernel-ports",
          "target": "shared-result",
          "type": "static"
        },
        {
          "source": "core-domain-shared-kernel-ports",
          "target": "shared-errors",
          "type": "static"
        }
      ],
      "shared-validation-schemas": [
        {
          "source": "shared-validation-schemas",
          "target": "shared-constants",
          "type": "static"
        }
      ],
      "core-application-tenancy": [
        {
          "source": "core-application-tenancy",
          "target": "core-domain-shared-kernel-commands-queries",
          "type": "static"
        },
        {
          "source": "core-application-tenancy",
          "target": "shared-types",
          "type": "static"
        },
        {
          "source": "core-application-tenancy",
          "target": "core-domain-tenancy",
          "type": "static"
        },
        {
          "source": "core-application-tenancy",
          "target": "shared-result",
          "type": "static"
        },
        {
          "source": "core-application-tenancy",
          "target": "shared-errors",
          "type": "static"
        },
        {
          "source": "core-application-tenancy",
          "target": "core-domain-shared-kernel-ports",
          "type": "static"
        },
        {
          "source": "core-application-tenancy",
          "target": "shared-utils",
          "type": "static"
        }
      ],
      "core-domain-tenancy": [
        {
          "source": "core-domain-tenancy",
          "target": "shared-errors",
          "type": "static"
        },
        {
          "source": "core-domain-tenancy",
          "target": "shared-types",
          "type": "static"
        },
        {
          "source": "core-domain-tenancy",
          "target": "shared-utils",
          "type": "static"
        },
        {
          "source": "core-domain-tenancy",
          "target": "core-domain-shared-kernel-entities",
          "type": "static"
        },
        {
          "source": "core-domain-tenancy",
          "target": "shared-result",
          "type": "static"
        },
        {
          "source": "core-domain-tenancy",
          "target": "core-domain-shared-kernel-events",
          "type": "static"
        },
        {
          "source": "core-domain-tenancy",
          "target": "core-domain-shared-kernel-ports",
          "type": "static"
        },
        {
          "source": "core-domain-tenancy",
          "target": "core-domain-shared-kernel-value-objects",
          "type": "static"
        }
      ],
      "aiper-assistance": [],
      "shared-constants": [],
      "guia-investidor": [],
      "portal-imoveis": [],
      "pwa-consultant": [],
      "pwa-supervisor": [
        {
          "source": "pwa-supervisor",
          "target": "ui-shared",
          "type": "static"
        }
      ],
      "shared-errors": [
        {
          "source": "shared-errors",
          "target": "shared-types",
          "type": "static"
        }
      ],
      "shared-result": [],
      "api-main-e2e": [
        {
          "source": "api-main-e2e",
          "target": "api-main",
          "type": "implicit"
        }
      ],
      "shared-types": [],
      "shared-utils": [
        {
          "source": "shared-utils",
          "target": "shared-types",
          "type": "static"
        },
        {
          "source": "shared-utils",
          "target": "shared-errors",
          "type": "static"
        },
        {
          "source": "shared-utils",
          "target": "shared-validation-schemas",
          "type": "static"
        },
        {
          "source": "shared-utils",
          "target": "shared-constants",
          "type": "static"
        }
      ],
      "web3-portal": [],
      "ui-shared": [],
      "api-main": [],
      "dev-hub": []
    }
  }
}
// RUTA: libs/core/domain/shared-kernel/value-objects/tsconfig.lib.json
// Autor: Raz Podesta (github @razpodesta, email: raz.podesta@metashark.tech)
// Empresa: MetaShark (I.S.) Florianópolis/SC, Brasil. Año 2025. Todos los derechos reservados.
// Propiedad Intelectual: MetaShark (I.S.)
{
  "extends": "./tsconfig.json", // Extiende el tsconfig.json de esta librería
  "compilerOptions": {
    "outDir": "../../../../../dist/out-tsc", // Directorio de salida estándar para artefactos de Nx
    "declaration": true, // Generar archivos .d.ts, crucial para librerías
    "declarationMap": true, // Generar source maps para los .d.ts, bueno para DX
    "module": "commonjs", // Módulo compatible con Node.js para librerías backend/agnósticas
    "types": ["node"] // Tipos de ambiente para esta librería (Node.js por defecto para libs de dominio)
    // Otras opciones como 'strict', 'target', 'esModuleInterop' se heredan de tsconfig.json -> tsconfig.base.json
  },
  "include": [
    // Archivos que forman parte del código fuente de esta librería
    "src/index.ts", // El punto de entrada principal de la librería
    "src/lib/**/*.ts" // Todos los archivos .ts dentro del directorio src/lib/
    // Si tuvieras archivos .tsx aquí (poco común para una lib de VOs de dominio), los añadirías.
  ],
  "exclude": [
    // Archivos y directorios a excluir de la compilación de esta librería
    "node_modules",
    "dist",
    "jest.config.ts", // Archivo de configuración de Jest
    "src/**/*.spec.ts", // Archivos de test unitario/integración
    "src/**/*.test.ts", // Otro patrón común para archivos de test
    "src/**/*.stories.ts", // Si se usara Storybook
    "src/test-setup.ts" // Si existiera un archivo de setup para tests específico de esta lib
  ]
}
